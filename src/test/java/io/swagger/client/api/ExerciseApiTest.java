/*
 * Interview Tests Mock API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.EnhancedOutages;
import io.swagger.client.model.EnhancedOutagesInner;
import io.swagger.client.model.ErrorMessage;
import io.swagger.client.model.Outages;
import io.swagger.client.model.OutagesInner;
import io.swagger.client.model.SiteInfo;
import io.swagger.client.model.SiteInfoDevices;

import org.junit.Test;
import org.junit.Ignore;

import static org.junit.Assert.assertTrue;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ExerciseApi
 */
@Ignore
public class ExerciseApiTest {

    private final ExerciseApi api = new ExerciseApi();

    /**
     * Returns all outages in our system.
     *
     * An outage is when a device can no longer provide service and is declared as offline. Each outage consists of a device ID, begin time, and end time.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void outagesGetTest() throws Exception {
        Outages response = api.outagesGet();

        for (OutagesInner otgI : response) {
           assertTrue((otgI.getEnd().compareTo(otgI.getBegin())>0));
        }

    }
    /**
     * Returns information about a specific site.
     *
     * The site information contains the ID and name of the site. It also contains a list of devices that make up the site.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void siteInfoSiteIdGetTest() throws Exception {
        String siteId = null;
        SiteInfo response = api.siteInfoSiteIdGet(siteId);

        assertTrue(response.getDevices().size()>0);
    }
    /**
     * Posts outages for a specific site with enhanced information.
     *
     * The outages posted should contain a device ID, device name, begin time, and end time.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void siteOutagesSiteIdPostTest() throws Exception {
        String siteId = "norwich-pear-tree";
        ExerciseApiExample exapi = new ExerciseApiExample();
        List<EnhancedOutagesInner> body = exapi.sendOutages(siteId, api);
        SiteInfo response = api.siteInfoSiteIdGet(siteId);
        List<SiteInfoDevices> sid = response.getDevices();
        int counter = 0;
        for (SiteInfoDevices siteInfoDevices : sid) {
            String id = siteInfoDevices.getId();
            for (EnhancedOutagesInner eoi : body) {
                if(eoi.getId().equals(id)){
                    counter++;
                }
                
            }
            assertTrue(counter>0);
            counter=0;
        }
        api.siteOutagesSiteIdPost(siteId, body);

        
    }
}
